------------------------------------------------------------
version 2.1
	1. 将 Obj 从接口修改为类，名称修改为 Item
	2. 将 x, y, alive 的定义和访问方法从下属类（CrashObj和Explode）修改到 Item 中
	3. 在 BattleField 内增加工厂创建模式的方法，并增加获取单例对象的静态方法， 同时删除 Explode 和 CrashObj里的属性 battleField
	4. CrashObj 改名为 Collider
	5. 碰撞检测的机制改为在 Collider 类中写出 检测逻辑，然后调用 onCollide 方法，子类中覆盖该方法完成回调。
	6. 添加了菜单栏和对应的类TankMenuBar
	7. 删除了PlayerTank中冗余的监听代码，该为在TankMenuBar中实现对应功能
	8. playerTank 的持有者由 TankPanel 修改为 BattleField
	9. 修改 PlayerTank的移动方式，删除了 w s a d 使用 v_direction 变量表示

------------------------------------------------------------
version 1.0
    1.简单的画出了坦克
    2.通过centerPoint来确定坦克的位置
    3.可以通过改变size 来调节画出的tank的大小

------------------------------------------------------------
version 1.1
    1.增加了direction参数，用来描述坦克的方向
    2.增加了rotate方法，通过角度参数，来旋转tank的整体方向
    3.增加了move方法，tank可以向前方移动
    
------------------------------------------------------------
version 1.2
    1.修改size为double类型
    2.增加TankController类，提供move方法，实现坦克移动控制的分离
    3.增加TankPainter类，提供paint方法，实现坦克绘制的分离
    4.在Tank类中增加了一系列属性的getter/setter方法
    5.提供了控制器和绘画器的get方法
    6.增加了TankPanel类，提供面板
    7.增加了SimTank类用于提供运行
    8.为坦克的移动增加了边界设定
    
------------------------------------------------------------
version 1.3
    1.更加完善了边界的设定
    2.再次封装了移动和旋转的操作，只对外提供前进后退的移动方式和左转右转的旋转方式
    3.增加了事件监听器，简单的提供演示，可以提供前进后退转向的操作。
    4.修改了绘画器painter和控制器controller的结构，使其使用静态函数而非构造器来完成对象功能，同时Tank类不再持有绘画器，这样使得程序结构更加合理
    5.修改了面板的背景
    6.将TankContronller中的dir，dx，dy，设为private；并修改了其中的右转的拼写错误。
    
------------------------------------------------------------
version 1.4
    1.将TankContronller改名为TankAction类
    2.更改了类的架构，在Tank类中持有TankAction和TankPainter对象
    3.在Tank类中增加了move方法和paint方法，封装2中的两个对象，使其对外不可见
    4.在Tank类中增加keyPress方法，用于处理键盘事件的回应
    5.新增加了TankRun类，实现了Runnable接口，其作为线程每隔50毫秒重画面板
    6.将几个paint方法名称改为draw，
    7.在TankPainter类中增加了对Tank对象的持有
    8.新增加了TankBullet类，其中生成了draw和fly方法，用于绘制和移动
    9.在TankPainter类中draw方法中增加了对子弹的draw方法，draw方法能将已死亡的子弹移出表结构
    10.子弹类对外界也是不可见的
    11.在Tank类中增加了一个表结构用于存储子弹
    
------------------------------------------------------------
version 1.5
    1.修改了移动和发射子弹的架构，增加了移动和发射的状态标记，当键盘事件到达时修改相应的标记通过标记来确定移动的方向和是否发射，这样的好处可以将不同监听事件造成的改变集中起来
    2.修改了move方法，在draw方法中增加了了对move的调用。
    3.TankAction改名为TankTankMove类。
    4.精简了TankMove类，既然其已经持有了Tank的对象，那么就不许在设置多余的其他全局变量了。
    5.为坦克增加了履带这一动态效果，现在坦克的移动看起来更加美观了。
    6.精简了Bullet类去除了不需要的全局变量。
    7.增加了几种坦克的设定，简单的添加了功能 可击中其他坦克。
    8.增加了爆炸类，坦克在击中其他坦克时将会产生爆炸的效果。
    
------------------------------------------------------------
version 1.6
    1.修改了整体架构，新增加了BattleField类，类中包含了三个表结构分别保存坦克、子弹、和爆炸信息
		所有的对象将共享一个BattleField对象新增加的每个Tank、Bullet、Explode将被添加至表结构中，
		当其生命周期结束将被自动的从表中移除。去除其他类中的不需要持有的属性。
    2.子弹在生命周期结束时将产生爆炸而不是和直接消失，这样的视觉效果更加直观了。
    3.修改了Tank类，去除了centerPoint属性，而用直接用坐标值x，y代替。因为使用点包装坐标，
	在取出和存入的过程中凭空增加了很多转换
    4.增加了Crashable接口，只有继承了Crashable接口的对象才能用于碰撞检测
    5.BattleField中增加碰撞检测的方法，方法输入一个Crashable对象，返回阻挡该对象的Crashable
    6.BattleField增加了upDate方法，用来清理已经生存周期结束的对象
    7.再次优化了一些类，尽可能的采用局部变量和final变量
    
------------------------------------------------------------
version 1.7
    1.更改了BattleField的upDate方法，其upDate将更新所有的Tank、Bullet、Explode，去除死亡的对象，同时调用其upDate方法。
    2.将Tank的act方法更改为upDate方法，用来向BattleField提交行为。
    2.将Bullet的fly方法更改为upDate方法，用来向BattleField提交行为。
    3.在Explode中添加了upDate方法，用来表示状态渐变，并向BattleField提交行为。
    4.修改了TankMove方法，去除了构造器使用静态方法来更改对象。
    5.在后退时，左转和右转其实是相反的，更改的move方法里体现了这一事实。
    6.增加了Drawable、Updateable接口，用于BattleField的draw和upDate方法。
    7.Tank类中增加了teamColor的属性，用来标记区分不同队伍的坦克。因为颜色是公用的类，以此来区别队伍即明显又方便。
		不同队伍的坦克将显示不同颜色，发射的子弹颜色也将不同。同一颜色的子弹不会对同颜色的坦克造成伤害。
		
------------------------------------------------------------
version 1.8
    1.修改Tank类为抽象类，定义若干抽象方法。因为对于玩家只需要操作一辆坦克，而其他坦克中采用的方
		法有所不同。因此有必要将玩家操控的坦克和自行操控的坦克区分开来。将Tank类变为抽象类，新增
		加PlayerTank和BotTank来表示不同的坦克。
    2.增加了Listenerable接口，新增加了一个接口，实现此接口的类，将可以处理事件，只有玩家坦克需要实现
    3.通过随机数的设置，BotTank现在不需要玩家的控制，可以自行表现出行为。
    4.简化了TankMove的move方法，删除了不必要的二次包装如moveAhead方法
    5.增加了fireRoutate，用于炮台旋转的一些列属性方法，并同步更新套TankMove和TankPaint中，使用
		QE旋转炮台
    6.优化了Crashable接口，在进行比较时，不再需要通过反射来获得类型信息，也不再需要多余的强制转换。
    7.将大部分的碰撞检测的处理结果集中在BattleField中
    8.修改了程序的架构，增加了TankFrame类用来运行窗口。
    
------------------------------------------------------------
version 1.9
    1.精简Crashable接口，不应该将过多的操作存放在BattleField类中，而应该封装其中的crash方法,每个继承了Crashable的接口都必须实现Crash方法.
    2.删除了BattleField中的碰撞检测功能，因为不同的对象对碰撞的反应不应该由其他类控制，而应该更好的封装这一功能。
	3.增加了Crash类，用于处理冲撞的执行过程
	4.删除了旋转炮台的设定，因为这一设定已经偏离本质太远
	5.删除了连发的设定，因为这一设定偏离设计的本质太远
	6.增加了config.Conf类用来存放全局参数，删除了一些不必要get/set方法，如Tank中的getBulletSpeed等
	7.删除了MyListener类，因为它是不必要的
	8.删除了Updater和Repainter类，将其归并为JPanel的内部类，因为确定没有别的类会使用它们
	9.删除了Updateable和Drawable接口，将他们的方法归并到Obj接口中
	10.将TankFrame类归并为Game类的内部类，因为逻辑简单且没有别的类会使用它
	11.删除了Painter类，在Tank抽象类中增加draw的实现，同样节省了代码，并且消除了不必要的传参
	12.删除了Move类，在Tank抽象类中增加move的实现，同样节省了代码，并且消除了不必要的传参
	
------------------------------------------------------------
version 2.0
	1.将CrashObj更改为抽象类
	2.删除了Crash类，将其Crash方法归并到CrashObj中，同时将Tank类的Crash实现一同归并到CrashObj中
	3.PlayerTank和BotTank不再实现CrashObj而只是是继承自Tank
	4.在BattleField中draw的同时也进行Update，这样减少了一论迭代过程，减少了资源的浪费
	5.将共有的变量如x，y，direction全部放在CrashObj中定义，删除了大量Tank，Bullet中重复的定义
	6.删除了大量重复方法
	7.将角度表示的方向转换为弧度表示，因为在实际过程中，存在大量的多余的角度至弧度的转换，但是弧度并不需要转换为角度
	8.虽然精简代码带来了程序的简洁，但是貌似类之前的耦合更加紧密了，着不太符合封装的思想，待改。